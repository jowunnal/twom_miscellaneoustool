name: Master CD
on: 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v4
    
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
      
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Create Local Properties
      run: echo '${{ secrets.LOCAL_PROPERTIES }}' >> ./local.properties

    - name: Create google-services
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON_DEBUG }}' > ./app/google-services.json

    - name: Extract Version Name
      run: echo "##[set-output name=version;]v$(echo '${{ github.event.pull_request.title }}' | grep -oP 'release:\s*\K[0-9]+\.[0-9]+\.[0-9]+')"
      id: extract_version
      
    - name: Release App Bundle
      run: ./gradlew bundleRelease

    - name: Upload Release Bundle to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: app/release/
        if-no-files-found: error

    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.extract_version.outputs.version }}
        release_name: ${{ steps.extract_version.outputs.version }}
        generate_release_notes: true
        files: |
               app/build/outputs/apk/release/app-release.apk
               
    - name: Increment versionCode
      run: |
          FILE_PATH="app/build.gradle.kts"
          VERSION_CODE=$(grep -oP 'versionCode\s*=\s*\K\d+' $FILE_PATH)
          NEW_VERSION_CODE=$((VERSION_CODE + 1))
          sed -i "s/versionCode = $VERSION_CODE/versionCode = $NEW_VERSION_CODE/" $FILE_PATH
          echo "Updated versionCode to $NEW_VERSION_CODE"

    - name: Commit and Push Changes
      run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add app/build.gradle.kts
          git commit -m "ðŸ”„ Bump versionCode to $NEW_VERSION_CODE [skip ci]"
          git push

    - name: Extract Version Information
      id: extract_versions
      run: |
          VERSION_CODE=$(grep -oP 'versionCode\s*=\s*\K\d+' app/build.gradle.kts)
          KOTLIN_VERSION=$(grep -oP 'kotlin("jvm") version "\K[0-9]+\.[0-9]+\.[0-9]+' build.gradle.kts)
          AGP_VERSION=$(grep -oP 'classpath\("com.android.tools.build:gradle:\K[0-9]+\.[0-9]+\.[0-9]+' build.gradle.kts)
          MIN_SDK=$(grep -oP 'minSdk\s*=\s*\K\d+' app/build.gradle.kts)
          TARGET_SDK=$(grep -oP 'targetSdk\s*=\s*\K\d+' app/build.gradle.kts)

          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "KOTLIN_VERSION=$KOTLIN_VERSION" >> $GITHUB_ENV
          echo "AGP_VERSION=$AGP_VERSION" >> $GITHUB_ENV
          echo "MIN_SDK=$MIN_SDK" >> $GITHUB_ENV
          echo "TARGET_SDK=$TARGET_SDK" >> $GITHUB_ENV

    - name: Update README.md
      run: |
          sed -i "s/PlayStore-v[0-9]\+\.[0-9]\+\.[0-9]\+/PlayStore-v$VERSION_CODE/" README.md
          sed -i "s/Kotlin-[0-9]\+\.[0-9]\+\.[0-9]\+/Kotlin-$KOTLIN_VERSION/" README.md
          sed -i "s/gradle-[0-9]\+\.[0-9]\+\.[0-9]\+/gradle-$AGP_VERSION/" README.md
          sed -i "s/minSdkVersion-[0-9]\+/minSdkVersion-$MIN_SDK/" README.md
          sed -i "s/targetSdkVersion-[0-9]\+/targetSdkVersion-$TARGET_SDK/" README.md

    - name: Commit and Push Changes
      run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "ðŸ”„ Update README version information [skip ci]" || echo "No changes to commit"
          git push
